# NOTE: This trick allows developers to use a different 
# mysql socket without altering the default configuration
# To override, create dbsocket.yml containing one line, 
# which is just the socket filename
# http://blog.lathi.net/articles/2006/03/02/config-database-yml-goodness-for-teams
# http://yanpritzker.com/2006/08/29/encrypted-db-passwords-for-rails-with-databaseyml-and-erb/
<% socket = "/tmp/mysql.sock" %>
<% file = File.join(::Rails.root.to_s, "config", "dbsocket.txt")
    socket = IO.read(file).strip if File.exist?(file) %>
    
# SQLite version 3.x
#   gem install sqlite3
development:
#  adapter: sqlite3
#  database: db/development.sqlite3
#  pool: 5
#  timeout: 5000
  adapter: mysql2
  encoding: utf8
  database: diagram
  pool: 5
  username: diagram
  password:
  socket: <%= socket %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test: &test
  adapter: sqlite3
  database: db/test.sqlite3
  pool: 5
  timeout: 5000

production:
  adapter: sqlite3
  database: db/production.sqlite3
  pool: 5
  timeout: 5000

cucumber:
  <<: *test