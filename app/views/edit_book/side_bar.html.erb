
<style type="text/css">
	.toolbar	{ position:fixed; top:1px; left:1px; padding:10px; font-family:Arial; background:#fffea1; border:2px solid #fc0;}
	</style>
<script type="text/javascript">
<!--
function handleClick(book_id, image_id, src){
	frameUrl = top.frames['content'].location.href;
	console.log(frameUrl);
	hashOffset = frameUrl.indexOf("#");
	if(hashOffset) {
	  frameUrl = frameUrl.substring(0, hashOffset)
	}
	console.log("location = " + frameUrl + "#" + image_id);
	parent.content.location = frameUrl + "#" + image_id;
}

function showGuide() {
    window.open('/help/DescriptionGuidance.html', '_guide',
            'height=400,width=700,status=false,menubar=0,location=0,toolbar=1,scrollbars=yes,left=100,top=100');
}

function handleSubmitResponse(responseText, responseStatus) {
	// no need to tell the user it worked
}

function handleImageEssentialChange(form){
	jQuery.ajaxSetup({ 
		timeout: 5 * 1000,
		error: function(XMLHttpRequest, textStatus, errorThrown) {
                alert("ERROR: Unable to save change\n" + errorThrown) }
		});
	authenticity_token = form.authenticity_token.value
	id = form["dynamic_image[id]"].value
	should_be_described = form["dynamic_image[should_be_described]"].value
	data = {
		"authenticity_token" : authenticity_token,
		"id" : id,
		"dynamic_image[should_be_described]" : should_be_described
	}
	jQuery.post("/imageDesc/dynamic_images/" + id, data, function(data, status) {handleSubmitResponse(data, status)})
}

function shouldShow(filterValue, essentialFlagValue, descriptionCount)
{
	isEssential = essentialFlagValue.indexOf("true") >= 0
	isNonEssential = essentialFlagValue.indexOf("false") >= 0
	isUnspecified = essentialFlagValue == ""
	hasDescriptions = descriptionCount >= 1

	showEssential = (filterValue == "essential")
	if(showEssential)
		return isEssential
		
	showNonEssential = (filterValue == "non-essential")
	if(showNonEssential)
		return isNonEssential

	showNeedsDescription = (filterValue == "missing")
	if(showNeedsDescription)
		return (isEssential && !hasDescriptions)
		
	showUnspecified = (filterValue == "unspecified")
	if(showUnspecified)
		return isUnspecified
		
	return true
}

function handleFragmentChange(element)
{
    book_fragment_id = $(element).val();
    
    top.frames['content'].location = "/edit_book/content?book_fragment_id=" + book_fragment_id + "#top";
    top.frames['side_bar'].location = "/edit_book/side_bar?book_id=<%=@book.id%>&book_fragment_id=" + book_fragment_id;
}
function handleFilterChange()
{
    var desired = document.getElementById("filter").value ;
    window.location.href = "/edit_book/side_bar?book_id=<%=session[:book_id]%>" + "&filter=" + desired
}
<%
  book = Book.find session[:book_id] rescue nil
%>
//-->
</script>
<div class="toolbar" style="width:259px;">
<%= select_tag(:fragment, options_for_select(book.book_fragments.map{|book| ["Fragment #{book.sequence_number}", book.id]}, (params[:book_fragment_id] || 0).to_i),{ :onchange => "handleFragmentChange(this)"}) if book%>
<br>
<%= select_tag(:filter, options_for_select([[t(:filter_all), EditBookController::FILTER_ALL], [t(:filter_essential), EditBookController::FILTER_ESSENTIAL], [t(:filter_non_essential), EditBookController::FILTER_NON_ESSENTIAL], [t(:filter_description_needed), EditBookController::FILTER_DESCRIPTION_NEEDED], [t(:filter_unspecified), EditBookController::FILTER_UNSPECIFIED]], @filter),{ :onchange => "handleFilterChange()"})%>
<b><%= @images.size %> <%= t(:filter_result)%> <a href='#' onClick="showGuide()">
  <div class='right'><img src='/images/info.png' width='20' height='20'/></div>
</a></b></br>
</div>

</br></br></br>

<%
  if book
  	@images.each do | image |
  		xml_id = image.xml_id
  		raw_src = image.image_location
  		src = "book/#{raw_src}"

          model =  image


%>
<div id="div_<%= src %>">
	<a id="<%= xml_id %>" href="#<%= xml_id %>">
	<img style="border:1px solid black; padding:0.25em; font-size: 80%;" 
		onclick="handleClick('<%= book.id %>', '<%= xml_id %>', '<%= raw_src %>')"
		src='<%= model.thumb_source(@host) %>'>
	</img>
	</a>
	<p>
<%=
		form_for model do | form |
%>
			<%= form.label(:should_be_described) %>
			<%= form.select :should_be_described, [['Yes', true], ['No', false]],
				{:include_blank => 'Unspecified', :custom_label => 'Essential?'},
				{:onChange => "handleImageEssentialChange(this.form);" }  %>
			<%= form.hidden_field(:id) %>
			<%= form.hidden_field(:book_id) %>
			<%= form.hidden_field(:image_location) %>
			
<!--		<%= form.submit %> -->
<%
		end
%>
</p>
<hr/>
</div>
<% 
    end
	end 
%>
